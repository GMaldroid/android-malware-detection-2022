import pickle
from tensorflow.keras import layers, optimizers, losses, Model # type: ignore
from stellargraph.layer import GraphSAGE
from stellargraph.mapper import GraphSAGENodeGenerator


num_top = 400

batch_size = 50
num_samples = [10, 10]
layer_sizes = [32, 32]
epochs = 60
dropout = 0.2
lr = 0.01

graph_full = pickle.load(open(f'output/graph_full_{num_top}.pickle', 'rb'))
graph_sampled = pickle.load(open(f'output/graph_sampled_{num_top}.pickle', 'rb'))

generator = GraphSAGENodeGenerator(graph_sampled, batch_size, num_samples, weighted=True)
graphsage_model = GraphSAGE(
    layer_sizes=layer_sizes, generator=generator, bias=True, dropout=dropout,
)
x_inp, x_out = graphsage_model.in_out_tensors()
prediction = layers.Dense(units=5, activation="softmax")(x_out)

model = Model(inputs=x_inp, outputs=prediction)
model.compile(
    optimizer=optimizers.Adam(learning_rate=lr),
    loss=losses.categorical_crossentropy,
    metrics=["acc"],
)

model.load_weights(f'output/model_{num_top}.h5')
print('Load model OK')

#TODO: connect new nodes to graph_full and predict
