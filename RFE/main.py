import json
from os import path
import pickle
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.feature_selection import RFE


top = 1000

if path.isfile(f'output/selector_{top}.pickle'):
    apis = json.load(open(f"../CountAPIs/output/Top_{top}_APIs_in_All.json", "r"))
    ranking = pickle.load(open(f'output/selector_{top}.pickle', 'rb')).ranking_
    
    result = []
    for i in range(len(apis)):
        result.append({
            'api_name': apis[i],
            'ranking': int(ranking[i])
        })
    result.sort(key=lambda x: x["ranking"], reverse=False)
    open(f"./output/APIs_in_All_RFE.json", "w").write(json.dumps([api['api_name'] for api in result], indent=4))
else:
    X = pd.read_csv(f'app_api_{top}_APIs_Origin.csv', header=0, index_col='Unnamed: 0')
    labels = X.pop('Label')
    x = X.to_numpy()
    y = labels.to_numpy()

    x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=42)

    model = SVC(kernel="linear")
    selector = RFE(estimator=model, n_features_to_select=1, step=1, verbose=1)
    selector.fit(x_train, y_train.ravel())
    pickle.dump(selector, open(f'output/selector_{top}.pickle', 'wb'))
